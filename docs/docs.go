// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/order/board": {
            "post": {
                "description": "해피버틀러 물류센터 비치용 WEB 주문현황 화면 출력에 필요한 데이터를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "주문현황판 주문내역 조회",
                "parameters": [
                    {
                        "description": "Order board list",
                        "name": "userLoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OrderBoardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderBoardRes"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "User login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login request info",
                        "name": "userLoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserLoginRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.OrderBoardReq": {
            "type": "object",
            "properties": {
                "storeCode": {
                    "type": "string"
                }
            }
        },
        "model.OrderBoardRes": {
            "type": "object",
            "properties": {
                "countOrderList1": {
                    "type": "integer"
                },
                "countOrderList2": {
                    "type": "integer"
                },
                "countOrderList3": {
                    "type": "integer"
                },
                "countOrderList4": {
                    "type": "integer"
                },
                "orderList1": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "orderList2": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "orderList3": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "orderList4": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "titleOrderList1": {
                    "type": "string"
                },
                "titleOrderList2": {
                    "type": "string"
                },
                "titleOrderList3": {
                    "type": "string"
                },
                "titleOrderList4": {
                    "type": "string"
                }
            }
        },
        "model.UserLoginReq": {
            "type": "object",
            "required": [
                "id",
                "otp",
                "pass"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                }
            }
        },
        "model.UserLoginRes": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "initPass": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "localhost:5001",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Butler swagger api",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
